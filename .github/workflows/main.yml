name: Ejecutar API de Clima

on:
  schedule:
    - cron: '1 15 * * *'  # Se ejecuta todos los días a las 15:01 UTC
  workflow_dispatch:  # Permite ejecución manual

env:
  API_KEY: ${{ secrets.API_KEY }}
  SF_USER: ${{ secrets.SF_USER }}
  SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
  SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
  SF_ROLE: ${{ secrets.SF_ROLE }}
  SF_DATABASE: ${{ secrets.SF_DATABASE }}
  SF_SCHEMA_CT: ${{ secrets.SF_SCHEMA_CT }}
  SF_SCHEMA: ${{ secrets.SF_SCHEMA }}

jobs:
  ejecutar_api:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Instalar Pipenv y dependencias
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --dev  # Instala dependencias del Pipfile

      - name: Verificar instalación de Uvicorn
        run: |
          pipenv run uvicorn --version

      - name: Iniciar API de FastAPI en segundo plano con logs
        run: |
          cd api  # Entrar al directorio correcto
          export PYTHONPATH=$PYTHONPATH:$(pwd)  # Asegura que Python busque los módulos en el directorio actual
          pipenv run uvicorn app:app --host 0.0.0.0 --port 8000 --log-level debug > nohup.out 2>&1 &
          sleep 10  # Esperar más tiempo para que la API arranque bien

      - name: Probar el endpoint `/clima`
        run: |
          sleep 5  # Espera unos segundos adicionales para asegurarse de que la API esté lista
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" "http://127.0.0.1:8000/clima")
          HTTP_STATUS=$(cat response.json | jq -r '.status' 2>/dev/null || echo "unknown")
          echo "HTTP Status: $HTTP_STATUS"
          cat response.json  # Muestra la respuesta en los logs
          if [ "$RESPONSE" -ne 200 ]; then exit 1; fi  # Falla el workflow si no es HTTP 200

      - name: Mostrar logs de la API (opcional)
        run: |
          if [ -f nohup.out ]; then
            cat nohup.out
          else
            echo "No hay logs disponibles"
          fi
